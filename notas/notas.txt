
¿Qué es Especificidad?
**********************

-Es como el navegador va a mostrar el CSS de acuerdo
 a que tan especifico es el selector que hemos creado.

- CSS es en cascada, eso no significa que si un selector
aparece después será tomado en cuenta sino más bien
su especificidad.


misma especificidad

En este caso tenemos la misma especificidad y aqui aplica el estilo 
en cascada significa que el estilo ubicado mas en la parte inferior
reemplazará al de la parte superior

p{
    color: red;
}


p{
    color: blue;
}


Aplicando especificidad

En este caso estamo siendo mas especificos al momento de indicar el primer
selector, asi que se aplicará ese estilo

p.parrafo {
    color: blue;
}

p {
    color: red;
}


important: este pasara encima de todos los demas

p#parrafo{
    color: blue;
}

p{
    color: red!important;
}


NOTA: SI UN ELEMENTO TIENE UN SELECTOR MÁS ESPECÍFICO NO IMPORTA
MUCHO DONDE HAYA SIDO DECLARADO, CSS DECIDIRÁ POR SU ESPECIFICIDAD

==================================================================

PSUEDO SELECTORES
*****************

INICIAR CON : PUNTOS, SON ELEMENTOS QUE NO EXISTEN COMO TAL EN HTML

==================================================================

: root {} : Permiete utilizar variables se les conocen como CUSTOM PROPERTIES

DEFINICION:

:root{
    --blanco : #ffff;
}

USO

.parrafor{
    var(--blanco);
}

====================================================================

¿Qué es Responsive WEB Desing?
******************************

Es un enfoque que nos dice que nuestros diseños deberán adaptarse a las interacciones del usuario y la resolucion
que utilizan.

Los sitios deberán adaptarse a celulares, tablets, laptops, computadoras de escritorio, televisores.

¿Cómo logro que mi sitio sea Responsive?

media queries

@media(min-width: 768px){

}

@media (min-width: 992px){

}

Estandar de Medidas:

480px : movil
768px : tablet
1140px : portatil
1400px : escritorio


====================================================================

Automatizar : atajos con visual studio code
*******************************************

ctrol + shift + p

escribir: 

    - Snippets: Configure Snippets
    - Seleccionar la tecnologia  ejemplo: css.json

    ecribir codigo: 

    "Crea un Media Querie" : {
		"prefix" : "mq",
		"body" : "@media (min-width: $1) {\n   $2\n}"
	}


=====================================================================

CSS BOX MODEL
*************

Todo en CSS es un caja, pero como sea esa caja depende de 4 cosas: 

¿Qué es CSS Box Model?

El tamaño de lo que se muestra en pantalla esta delimitando por 4 cosas: 

tamaño de contenido, tamaño de relleno (padding), tamaño del borde y el margen

Si tienes el Siguiente Selector:

    .cliente {
        padding: 20px;
        width: 200px;
        border: 10px solid red;
    }

Tu elemento medirá 260px: 200 del width, 40 del padding y 20 del border.

===========================================================================

APRENDIENDO GRID
****************

CSS GRID te permite definir la ubicación y tamaño de los elementos de tu sitio WEB

FLEXBOX

El contenido crece automáticamente
1 dimension (row o column)

CSS GRID

El contenido se agrupa dentro de un área definida
2 dimensiones

En Cierta forma es como una tabla de HTML, con la ventaja de mayor flexibilidad y control sobre tu 
diseño.

¿Entonces CSS Grid es mejor?

Algunos diseños son más fáciles en CSS Grid que en Flexbox y otros son más sencillos en Flexbox que en 
CSS Grid.

Los puedes utilizar juntos en un mismo diseño.

------------
Iniciar grid
------------

activa grid se le aplica al contenedor padre

display: grid;

---------
Columnas: column
---------

2 columnas de 300px.

grid-template-columns: 300px 300px;

3 columnas

grid-template-columns: 33.3% 33.3% 33.3%;
grid-template-columns: 1fr 1fr 1fr; // se ajusta al espacio
grid-template-columns: repeat(3. 1fr); // Forma abreviada 3 columnas de 1fr

------------
Filas : row
------------

1 columna de 200px , 1 de 800px

grid-template-rows: 200px 800px;

-------------
Abreviaciones:
-------------

columnas y filas

grid: 200px 800px / 300px 300px;


-----------
Utilidades:
-----------

Separacion Gap

column-gap: 1rem;




============================================================

Cuando Utilizar CSS GRID, FLEXBOX y FLOATS
******************************************

Utilizar FLEXBOX

Para alineación o distribución de los elementos que estarán dentro de contenedores

ejemplo: una barra de navegacion

-----------------------------

Utiliza CSS GRID

Para definir el layout de tu sitio web, como pueden ser las columnas o contenedores de elementos


-----------------------------

Utiliza Floats:

Ya no se recomienda utilizar floats


==============================================

FUNCIONES CSS

min(); TOMAR EL VALOR MAS PEQUEÑO PARA APLICAR EL ESTILO

Utiliza el valor más pequeño hace una comparacion entre el primer valor y el
segundo

.formulario{
    width: min(60rem, 100%); 
}


==============================================

SELECTORES
**********

Selector de atributo
////////////////////


input[type="text"]{

}

input[type="tel"]{
    
}




